package net.groupw.tp_so.Gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import net.groupw.tp_so.Files.Log;
import net.groupw.tp_so.Files.UserCRUD;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Locale;

public class RemoveUser extends JFrame {
    private ArrayList<Log> logs;
    private JPanel RemovePanel;
    private JLabel imageLogo;
    private JTextField userField;
    private JLabel userLabel;
    private JButton removeButton;


    public RemoveUser(ArrayList<Log> logs) {
        $$$setupUI$$$();
        setContentPane(RemovePanel);
        setTitle("Remove");
        setSize(450, 350);
        setLocationRelativeTo(null);
        setVisible(true);

        ImageIcon icon = new ImageIcon("src/main/java/net/groupw/tp_so/assets/logo.png");
        setIconImage(icon.getImage());


        removeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                performRemoveUser();
            }
        });
    }

    private void createUIComponents() {

        imageLogo = new JLabel(new ImageIcon("src/main/java/net/groupw/tp_so/assets/logo.png"));
    }

    private void performRemoveUser() {
        String username = userField.getText();

        UserCRUD crud = new UserCRUD(logs);

        // Aqui você colocaria a lógica de verificação do login
        crud.removeUser(username);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        RemovePanel = new JPanel();
        RemovePanel.setLayout(new FormLayout("fill:30px:noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:30px:noGrow", "center:d:grow,top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow"));
        RemovePanel.setBackground(new Color(-855310));
        RemovePanel.setPreferredSize(new Dimension(450, 350));
        imageLogo.setPreferredSize(new Dimension(150, 150));
        imageLogo.setText("");
        CellConstraints cc = new CellConstraints();
        RemovePanel.add(imageLogo, cc.xy(3, 3, CellConstraints.CENTER, CellConstraints.DEFAULT));
        userLabel = new JLabel();
        userLabel.setForeground(new Color(-16751002));
        userLabel.setText("Username");
        RemovePanel.add(userLabel, cc.xy(3, 7));
        userField = new JTextField();
        RemovePanel.add(userField, cc.xy(3, 9, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        RemovePanel.add(spacer1, cc.xy(1, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        RemovePanel.add(spacer2, cc.xy(5, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 24, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16751002));
        label1.setText("Remove");
        RemovePanel.add(label1, cc.xy(3, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        removeButton = new JButton();
        removeButton.setBackground(new Color(-6877690));
        removeButton.setForeground(new Color(-855310));
        removeButton.setPreferredSize(new Dimension(100, 50));
        removeButton.setText("Remove");
        RemovePanel.add(removeButton, cc.xy(3, 11, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        RemovePanel.add(spacer3, cc.xy(3, 13, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        RemovePanel.add(spacer4, cc.xy(3, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        userLabel.setLabelFor(userField);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return RemovePanel;
    }
}


