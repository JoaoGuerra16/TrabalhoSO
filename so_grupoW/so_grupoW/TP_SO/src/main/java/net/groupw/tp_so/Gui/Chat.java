package net.groupw.tp_so.Gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import net.groupw.tp_so.Files.Satellite;
import net.groupw.tp_so.Files.User;
import net.groupw.tp_so.Interface.ChatCallback;

import javax.print.event.PrintServiceAttributeEvent;
import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.Locale;

public class Chat extends JFrame implements ChatCallback {
    private JPanel chatPanel;
    private JTextField TextField;
    private JButton sentButton;
    private JScrollBar scrollBar1;
    private JTextPane ChatTextPane;

    private ChatCallback callback;

    private User user;

    public Chat() {

    }

    public Chat(User user) {
        setContentPane(chatPanel);
        setTitle("Satellite Commands");
        setSize(500, 550);
        setLocationRelativeTo(null);
        setVisible(true);
        this.user = user;


        Satellite.getInstance().setChatCallback(this);

        ImageIcon icon = new ImageIcon("src/main/java/net/groupw/tp_so/assets/logo.png");
        setIconImage(icon.getImage());

        TextField.setText("Insira o comando aqui...");
        TextField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (!TextField.getText().isEmpty()) {
                    TextField.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (TextField.getText().isEmpty()) {
                    TextField.setText("Digite aqui...");
                }
            }
        });
        sentButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                user.userSendMessage(TextField.getText());
                addNewMessage(TextField.getText(), User.getUsername());
            }
        });


    }

    public void addNewMessage(String message, String sender) {
        SwingUtilities.invokeLater(() -> {
            try {
                StyledDocument styledDocument = ChatTextPane.getStyledDocument();
                Style style = styledDocument.getStyle(StyleContext.DEFAULT_STYLE);
                styledDocument.insertString(styledDocument.getLength(), sender + " sent: " + message + "\n", style);
                ChatTextPane.setCaretPosition(styledDocument.getLength());

            } catch (BadLocationException e) {
                throw new RuntimeException(e);
            }
        });
    }

    @Override
    public void onMessageReceived(String message, String sender) {
        SwingUtilities.invokeLater(() -> {
            addNewMessage(message, sender);
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        chatPanel = new JPanel();
        chatPanel.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        chatPanel.setBackground(new Color(-2104859));
        chatPanel.setPreferredSize(new Dimension(500, 550));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        CellConstraints cc = new CellConstraints();
        chatPanel.add(spacer1, cc.xywh(7, 5, 1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        chatPanel.add(spacer2, cc.xywh(1, 5, 1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        chatPanel.add(spacer3, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panel1.setBackground(new Color(-2104859));
        panel1.setPreferredSize(new Dimension(50, 50));
        chatPanel.add(panel1, cc.xy(3, 9, CellConstraints.FILL, CellConstraints.DEFAULT));
        sentButton = new JButton();
        sentButton.setBackground(new Color(-16751002));
        Font sentButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 16, sentButton.getFont());
        if (sentButtonFont != null) sentButton.setFont(sentButtonFont);
        sentButton.setForeground(new Color(-855310));
        sentButton.setPreferredSize(new Dimension(100, 50));
        sentButton.setText("Sent");
        panel1.add(sentButton, cc.xy(5, 1));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer4, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        TextField = new JTextField();
        TextField.setPreferredSize(new Dimension(49, 50));
        panel1.add(TextField, cc.xyw(1, 1, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        scrollBar1 = new JScrollBar();
        scrollBar1.setOrientation(1);
        chatPanel.add(scrollBar1, cc.xy(5, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        final JScrollPane scrollPane1 = new JScrollPane();
        chatPanel.add(scrollPane1, cc.xy(3, 5, CellConstraints.FILL, CellConstraints.FILL));
        ChatTextPane = new JTextPane();
        ChatTextPane.setEditable(false);
        scrollPane1.setViewportView(ChatTextPane);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Roboto Light", Font.BOLD, 24, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16751002));
        label1.setText("Satellite Commands");
        chatPanel.add(label1, cc.xy(3, 3, CellConstraints.CENTER, CellConstraints.DEFAULT));
        scrollPane1.setVerticalScrollBar(scrollBar1);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return chatPanel;
    }
}