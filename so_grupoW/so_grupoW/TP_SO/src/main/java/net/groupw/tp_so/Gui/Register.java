package net.groupw.tp_so.Gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import net.groupw.tp_so.Files.Log;
import net.groupw.tp_so.Files.UserCRUD;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Locale;


public class Register extends JFrame {

    private ArrayList<Log> logs;
    private JPanel RegisterPanel;
    private JLabel imageLogo;
    private JButton RegisterBtn;
    private JTextField userField;
    private JPasswordField passwordField;
    private JButton registerButton;
    private JLabel Registar;
    private JComboBox RoleDropbox;
    private JTextField roleTextField;


    private static ButtonGroup buttonGroup1;

    public Register(ArrayList<Log> logs) {
        $$$setupUI$$$();
        setContentPane(RegisterPanel);
        setTitle("Register");
        setSize(500, 550);
        setLocationRelativeTo(null);
        setVisible(true);

        ImageIcon icon = new ImageIcon("src/main/java/net/groupw/tp_so/assets/logo.png");
        setIconImage(icon.getImage());
        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                performRegister();
            }
        });
    }

    private void createUIComponents() {

        imageLogo = new JLabel(new ImageIcon("src/main/java/net/groupw/tp_so/assets/logo.png"));
    }

    private void performRegister() {
        String username = userField.getText();
        String password = new String(passwordField.getPassword());
        String role = new String(String.valueOf(RoleDropbox.getSelectedItem()));

        UserCRUD crud = new UserCRUD(logs);

        // Aqui você colocaria a lógica de verificação do login
        crud.createUser(username, password, role, 1);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        RegisterPanel = new JPanel();
        RegisterPanel.setLayout(new FormLayout("fill:50px:noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:77px:grow,left:4dlu:noGrow,fill:50px:noGrow", "center:d:grow,center:150px:noGrow,center:34px:noGrow,center:max(d;4px):noGrow,center:19px:grow,center:31px:noGrow,center:19px:noGrow,center:31px:noGrow,center:19px:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:5dlu:noGrow,center:31px:noGrow,center:87px:grow,center:8px:grow"));
        RegisterPanel.setBackground(new Color(-855310));
        RegisterPanel.setMaximumSize(new Dimension(2147483647, 2147483647));
        RegisterPanel.setMinimumSize(new Dimension(450, 500));
        RegisterPanel.setPreferredSize(new Dimension(450, 500));
        imageLogo.setPreferredSize(new Dimension(150, 150));
        imageLogo.setText("");
        CellConstraints cc = new CellConstraints();
        RegisterPanel.add(imageLogo, cc.xyw(3, 2, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        RegisterPanel.add(spacer1, cc.xywh(1, 1, 1, 15, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        RegisterPanel.add(spacer2, cc.xywh(9, 1, 1, 15, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        RegisterPanel.add(spacer3, cc.xyw(3, 1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-16751002));
        Font label1Font = this.$$$getFont$$$(null, -1, -1, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16751002));
        label1.setText("Password");
        RegisterPanel.add(label1, cc.xyw(3, 7, 5));
        userField = new JTextField();
        RegisterPanel.add(userField, cc.xyw(3, 6, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        passwordField = new JPasswordField();
        RegisterPanel.add(passwordField, cc.xyw(3, 8, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label2 = new JLabel();
        label2.setFocusable(true);
        label2.setForeground(new Color(-16751002));
        label2.setPreferredSize(new Dimension(61, 17));
        label2.setText("Username");
        RegisterPanel.add(label2, cc.xyw(3, 5, 5));
        registerButton = new JButton();
        registerButton.setBackground(new Color(-16751002));
        Font registerButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 16, registerButton.getFont());
        if (registerButtonFont != null) registerButton.setFont(registerButtonFont);
        registerButton.setForeground(new Color(-855310));
        registerButton.setPreferredSize(new Dimension(130, 50));
        registerButton.setText("Register");
        RegisterPanel.add(registerButton, cc.xyw(3, 14, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        RegisterPanel.add(spacer4, cc.xyw(3, 15, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer5 = new com.intellij.uiDesigner.core.Spacer();
        RegisterPanel.add(spacer5, cc.xyw(3, 3, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        Registar = new JLabel();
        Registar.setBackground(new Color(-16751002));
        Font RegistarFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 24, Registar.getFont());
        if (RegistarFont != null) Registar.setFont(RegistarFont);
        Registar.setForeground(new Color(-16751002));
        Registar.setText("REGISTER");
        RegisterPanel.add(Registar, cc.xyw(3, 4, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$(null, -1, -1, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setForeground(new Color(-16751002));
        label3.setPreferredSize(new Dimension(61, 17));
        label3.setText("Role");
        RegisterPanel.add(label3, cc.xyw(3, 9, 5));
        RoleDropbox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Director");
        defaultComboBoxModel1.addElement("Engineer");
        defaultComboBoxModel1.addElement("Specialist");
        RoleDropbox.setModel(defaultComboBoxModel1);
        RegisterPanel.add(RoleDropbox, cc.xyw(3, 11, 3));
        label1.setLabelFor(passwordField);
        label2.setLabelFor(userField);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return RegisterPanel;
    }
}
