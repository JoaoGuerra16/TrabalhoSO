package net.groupw.tp_so.Gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import net.groupw.tp_so.Files.Kernel;
import net.groupw.tp_so.Files.Log;
import net.groupw.tp_so.Files.User;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Locale;

public class MenuAdmin extends JFrame {
    private ArrayList<Log> logs;
    private JPanel MenuAdmin;
    private JLabel menuAdmin;
    private JButton exitButton;
    private JButton Perfil;
    private JButton simulateButton;
    private JButton logsButton;
    private JButton graphButton;
    private JButton listOfUsersButton;
    private JButton button6;


    public MenuAdmin(User user) {
        setContentPane(MenuAdmin);
        setTitle("Menu Admin");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(400, 350);
        setLocationRelativeTo(null);
        setVisible(true);

        ImageIcon icon = new ImageIcon("src/main/java/net/groupw/tp_so/assets/logo.png");
        setIconImage(icon.getImage());


        Perfil.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                SwingUtilities.invokeLater(() -> {
                    new Profile(user);
                });
            }
        });
        simulateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new Simulator(user);
            }
        });
        logsButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new Logs();
            }
        });
        graphButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new LoginChart("Chart");
            }
        });
        listOfUsersButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new UserList(logs);
            }
        });
        button6.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });

        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Kernel kernel = new Kernel();
                kernel.desligarSistema();
            }
        });


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MenuAdmin = new JPanel();
        MenuAdmin.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow,top:5dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        MenuAdmin.setBackground(new Color(-855310));
        MenuAdmin.setPreferredSize(new Dimension(400, 350));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow", "center:d:grow,top:4dlu:noGrow,center:d:grow"));
        panel1.setBackground(new Color(-855310));
        panel1.setPreferredSize(new Dimension(400, 50));
        CellConstraints cc = new CellConstraints();
        MenuAdmin.add(panel1, cc.xy(3, 1));
        menuAdmin = new JLabel();
        Font menuAdminFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 24, menuAdmin.getFont());
        if (menuAdminFont != null) menuAdmin.setFont(menuAdminFont);
        menuAdmin.setForeground(new Color(-16751002));
        menuAdmin.setText("MenuAdmin");
        panel1.add(menuAdmin, cc.xy(1, 3, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer1, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        MenuAdmin.add(spacer2, cc.xy(1, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        MenuAdmin.add(spacer3, cc.xy(5, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        MenuAdmin.add(spacer4, cc.xy(3, 9, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        panel2.setBackground(new Color(-855310));
        panel2.setPreferredSize(new Dimension(400, 100));
        MenuAdmin.add(panel2, cc.xy(3, 7));
        exitButton = new JButton();
        exitButton.setBackground(new Color(-6877690));
        Font exitButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, exitButton.getFont());
        if (exitButtonFont != null) exitButton.setFont(exitButtonFont);
        exitButton.setForeground(new Color(-855310));
        exitButton.setPreferredSize(new Dimension(200, 50));
        exitButton.setText("Exit");
        panel2.add(exitButton, cc.xy(1, 1, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panel3.setPreferredSize(new Dimension(400, 180));
        MenuAdmin.add(panel3, cc.xy(3, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        Perfil = new JButton();
        Perfil.setBackground(new Color(-16751002));
        Font PerfilFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, Perfil.getFont());
        if (PerfilFont != null) Perfil.setFont(PerfilFont);
        Perfil.setForeground(new Color(-855310));
        Perfil.setPreferredSize(new Dimension(200, 50));
        Perfil.setText("Profile");
        panel3.add(Perfil, cc.xy(1, 1));
        simulateButton = new JButton();
        simulateButton.setBackground(new Color(-16751002));
        Font simulateButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, simulateButton.getFont());
        if (simulateButtonFont != null) simulateButton.setFont(simulateButtonFont);
        simulateButton.setForeground(new Color(-855310));
        simulateButton.setPreferredSize(new Dimension(200, 50));
        simulateButton.setText("Simulator");
        panel3.add(simulateButton, cc.xy(3, 1));
        logsButton = new JButton();
        logsButton.setBackground(new Color(-16751002));
        Font logsButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, logsButton.getFont());
        if (logsButtonFont != null) logsButton.setFont(logsButtonFont);
        logsButton.setForeground(new Color(-855310));
        logsButton.setPreferredSize(new Dimension(200, 50));
        logsButton.setText("Logs");
        panel3.add(logsButton, cc.xy(1, 3));
        graphButton = new JButton();
        graphButton.setAutoscrolls(false);
        graphButton.setBackground(new Color(-16751002));
        Font graphButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, graphButton.getFont());
        if (graphButtonFont != null) graphButton.setFont(graphButtonFont);
        graphButton.setForeground(new Color(-855310));
        graphButton.setPreferredSize(new Dimension(200, 50));
        graphButton.setText("Graph");
        panel3.add(graphButton, cc.xy(3, 3));
        listOfUsersButton = new JButton();
        listOfUsersButton.setBackground(new Color(-16751002));
        Font listOfUsersButtonFont = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, listOfUsersButton.getFont());
        if (listOfUsersButtonFont != null) listOfUsersButton.setFont(listOfUsersButtonFont);
        listOfUsersButton.setForeground(new Color(-855310));
        listOfUsersButton.setPreferredSize(new Dimension(200, 50));
        listOfUsersButton.setText("List of users");
        panel3.add(listOfUsersButton, cc.xy(1, 5));
        button6 = new JButton();
        button6.setBackground(new Color(-16751002));
        Font button6Font = this.$$$getFont$$$("Roboto Light", Font.BOLD, 15, button6.getFont());
        if (button6Font != null) button6.setFont(button6Font);
        button6.setForeground(new Color(-855310));
        button6.setPreferredSize(new Dimension(200, 50));
        button6.setText("Button");
        panel3.add(button6, cc.xy(3, 5));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MenuAdmin;
    }
}

